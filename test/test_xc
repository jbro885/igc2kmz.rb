#!/usr/bin/ruby

$:.unshift(File.join(File.dirname(__FILE__), "..", "lib"))
require "coord"
require "igc"
require "optparse"
require "xc"

module Radians

  class << self

    def to_dmh(rad, hemispheres)
      deg, min = (60.0 * rad * 180.0 / Math::PI).divmod(60)
      "%d'%06.3f%s" % [deg.abs, min, hemispheres[deg <=> 0, 1]]
    end

  end

end

class Coord

  def to_s
    "%s %s %dm" % [Radians.to_dmh(@lat, "NNS"), Radians.to_dmh(@lon, "EEW"), @alt]
  end

end

def main(argv)
  league = XC::Open
  complexity = 4
  OptionParser.new do |op|
    op.on("-k", "--complexity COMPLEXITY", Integer, "Complexity") do |arg|
      complexity = arg
    end
    op.on("-x", "--xc-league LEAGUE", XC.leagues_hash, "XC league") do |arg|
      league = arg
    end
    op.parse!(argv)
  end
  argv.each do |arg|
    igc = IGC.new(File.open(arg))
    league.optimize(igc.fixes, complexity).each do |xc|
      puts("League-Name: #{xc.league.name}")
      puts("League-Description: #{xc.league.description}")
      puts("Type: #{xc.type}")
      xc.turnpoints.each do |turnpoint|
        puts("#{turnpoint.name}: #{turnpoint}")
      end
      puts("Distance: #{xc.distance / 1000.0}km")
      puts("Multiplier: #{xc.multiplier}")
      puts("Score: %.1f points" % xc.score)
    end
  end
end

main(ARGV) if $0 == __FILE__
